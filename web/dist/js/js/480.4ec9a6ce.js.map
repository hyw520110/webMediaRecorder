{"version":3,"file":"js/js/480.4ec9a6ce.js","mappings":"sIAGO,MAAMA,EAAoBC,UAC7B,IACI,MAAMC,QAAeC,UAAUC,aAAaC,aAAa,CACrDC,OAAO,IAGX,OADAJ,EAAOK,YAAYC,SAASC,GAAUA,EAAMC,UACrC,CACX,CAAE,MAAOC,GACL,OAAO,CACX,GAsBSC,IADeC,EAAAA,EAAAA,IAAI,KACLA,EAAAA,EAAAA,IAAI,M,4ECjCtBC,GAAG,kB,GAECC,MAAM,sB,GACFA,MAAM,kB,GACAF,IAAI,cAAcG,SAAA,GAASC,MAAA,I,GALlDC,IAAA,EAciCH,MAAM,iB,0CAbnCI,EAAAA,EAAAA,IAgBM,MAhBNC,EAgBM,cAfFC,EAAAA,EAAAA,IAAc,UAAV,SAAK,KACTA,EAAAA,EAAAA,IAUM,MAVNC,EAUM,EATFD,EAAAA,EAAAA,IAQM,MARNE,EAQM,EAPFF,EAAAA,EAAAA,IAAgD,QAAhDG,EAAgD,WAChDH,EAAAA,EAAAA,IAES,UAFDR,IAAI,gBAAiBY,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,qBAAAD,EAAAC,uBAAAF,KAAqB,SAEzD,MACAN,EAAAA,EAAAA,IAES,UAFDR,IAAI,eAAeiB,SAAA,GAAUL,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAG,oBAAAH,EAAAG,sBAAAJ,KAAoB,SAEhE,SAGGC,EAAAI,eAAY,WAAvBb,EAAAA,EAAAA,IAEM,MAFNc,GAEMC,EAAAA,EAAAA,IADCN,EAAAI,cAAY,KAf3BG,EAAAA,EAAAA,IAAA,Q,uBCWA,MAAMC,EAAsBA,CAACC,EAAMC,KAC/B,IACI,MAAMC,EAAQ,aACRC,EAAS,IAAIC,UAAUF,GAkB7B,OAhBAC,EAAOE,OAAS,KACZC,QAAQC,IAAI,GAAGP,qBAEf,MAAMQ,EAAc,IAAIC,WAAW,CAAU,UAATT,EAAmB,EAAI,IAC3DG,EAAOO,KAAKF,GACRP,GAAUA,EAASE,EAAO,EAGlCA,EAAOQ,QAAWrC,IACdgC,QAAQhC,MAAM,GAAG0B,kBAAsB1B,EAAM,EAGjD6B,EAAOS,QAAWC,IACdP,QAAQC,IAAI,GAAGP,oBAAwBa,EAAM,EAG1CV,CACX,CAAE,MAAO7B,GAEL,OADAgC,QAAQhC,MAAM,KAAK0B,iBAAqB1B,GACjC,IACX,GAGSwC,EAAoBA,KAC7B,MAAMC,GAAgBvC,EAAAA,EAAAA,IAAI,MACpBwC,GAAYxC,EAAAA,EAAAA,IAAI,MAChByC,GAAiBzC,EAAAA,EAAAA,IAAI,MACrB0C,GAAoB1C,EAAAA,EAAAA,IAAI,IACxB2C,GAAgB3C,EAAAA,EAAAA,IAAI,MACpB4C,GAAe5C,EAAAA,EAAAA,IAAI,MAGnBgB,EAAsBA,KACxB,IACIwB,EAAUK,MAAQtB,EAAoB,SAASnC,UAC3C,MAAM0D,QAAkBC,IACxB,GAAID,EAAW,CACX,MAAMzD,QAAe2D,IACjB3D,GACA4D,EAAGf,KAAK,IAAID,WAAW,CAAC,IAEhC,MACIgB,EAAGf,KAAK,IAAID,WAAW,CAAC,IAC5B,GAER,CAAE,MAAOnC,GACLgC,QAAQhC,MAAM,UAAWA,GACzB4C,EAAkBG,MAAQ,qBAC9B,GAGE3B,EAAqBA,KACnBsB,EAAUK,OAAOL,EAAUK,MAAMK,QACjCX,EAAcM,OAAON,EAAcM,MAAMhD,OACzC8C,EAAcE,QAAOF,EAAcE,MAAM5B,UAAW,GACpD2B,EAAaC,QAAOD,EAAaC,MAAM5B,UAAW,EAAI,EAGxD+B,EAAY5D,UACd,IACI,IACKE,UAAUC,eACVD,UAAUC,aAAaC,aAExB,MAAM,IAAI2D,MAAM,yBAGpB,MAAM9D,QAAeC,UAAUC,aAAaC,aAAa,CACrD4D,OAAO,IAUX,OARAb,EAAcM,MAAQ,IAAIQ,cAAchE,GAExCkD,EAAcM,MAAMS,gBAAmBjB,IAC/BA,EAAMkB,MAAQlB,EAAMkB,KAAKC,IACzB,EAIDnE,CACX,CAAE,MAAOS,GAGL,OAFAgC,QAAQhC,MAAM,WAAYA,GAC1B4C,EAAkBG,MAAQ,oBACnB,IACX,GAGEE,EAAoB3D,UACtB,IACI,MAAMC,QAAeC,UAAUC,aAAaC,aAAa,CACrD4D,OAAO,IAGX,OADA/D,EAAOK,YAAYC,SAASC,GAAUA,EAAMC,UACrC,CACX,CAAE,MAAOC,GACL,OAAO,CACX,GAGE2D,EAAoBA,KACtB,GAAI1D,EAAAA,GAAY8C,OAAS9C,EAAAA,GAAY8C,MAAMa,UAAW,CAClD,MAAMC,EAAS5D,EAAAA,GAAY8C,MAAMa,UAAUhE,YAC3CiE,EAAOhE,SAASC,GAAUA,EAAMC,SAChCE,EAAAA,GAAY8C,MAAMa,UAAY,IAClC,GAGJ,MAAO,CACHnB,gBACAC,YACAC,iBACAC,oBACAC,gBACAC,eACA5B,sBACAE,qBACA8B,YACAD,oBACAU,oBACH,ED/GD,GACIG,KAAM,gBACNC,KAAAA,GACI,MAAM,YACF9D,EAAW,aACXoB,EAAY,cACZwB,EAAa,aACbC,EAAY,oBACZ5B,EAAmB,mBACnBE,EAAkB,kBAClB6B,GACAT,IAEJ,MAAO,CAEHvC,cACA4C,gBACAC,eAGA5B,sBACAE,qBAGAC,eACA4B,oBAER,G,aE3CR,MAAMe,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,G","sources":["webpack://web/./src/composables/deviceChecker.js","webpack://web/./src/views/VideoRecorder.vue","webpack://web/./src/composables/videoProcessor.js","webpack://web/./src/views/VideoRecorder.vue?882e"],"sourcesContent":["// deviceChecker.js\nimport { ref } from 'vue'\n\nexport const checkAudioSupport = async () => {\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true,\n        })\n        stream.getTracks().forEach((track) => track.stop())\n        return true\n    } catch (error) {\n        return false\n    }\n}\n\nexport const checkVideoSupport = async () => {\n    try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true,\n        })\n        stream.getTracks().forEach((track) => track.stop())\n        return true\n    } catch (error) {\n        return false\n    }\n}\n\nexport const checkMediaSupport = async () => {\n    const audioSupported = await checkAudioSupport()\n    const videoSupported = await checkVideoSupport()\n    return { audioSupported, videoSupported }\n}\n\nexport const errorMessage = ref('')\nexport const videoPlayer = ref(null)\n","<template>\n    <div id=\"video-recorder\">\n        <h2>视频录像机</h2>\n        <div class=\"recorder-container\">\n            <div class=\"video-recorder\">\n                <video ref=\"videoPlayer\" autoplay muted></video>\n                <button ref=\"startVideoBtn\" @click=\"startVideoRecording\">\n                    开始录像\n                </button>\n                <button ref=\"stopVideoBtn\" disabled @click=\"stopVideoRecording\">\n                    停止录像\n                </button>\n            </div>\n        </div>\n        <div v-if=\"errorMessage\" class=\"error-message\">\n            {{ errorMessage }}\n        </div>\n    </div>\n</template>\n\n<script>\n    import { useVideoProcessor } from '@/composables/videoProcessor'\n\n    export default {\n        name: 'VideoRecorder',\n        setup() {\n            const {\n                videoPlayer,\n                errorMessage,\n                startVideoBtn,\n                stopVideoBtn,\n                startVideoRecording,\n                stopVideoRecording,\n                checkVideoSupport,\n            } = useVideoProcessor()\n\n            return {\n                // Refs\n                videoPlayer,\n                startVideoBtn,\n                stopVideoBtn,\n\n                // Methods\n                startVideoRecording,\n                stopVideoRecording,\n\n                // Computed & Data\n                errorMessage,\n                checkVideoSupport,\n            }\n        },\n    }\n</script>\n\n<style>\n    .recorder-container {\n        display: flex;\n        justify-content: center;\n        margin-top: 20px;\n    }\n\n    .video-recorder {\n        border: 1px solid #ccc;\n        padding: 20px;\n        border-radius: 8px;\n        width: 60%;\n        background-color: #f9f9f9;\n    }\n\n    button {\n        margin: 10px;\n        padding: 10px 20px;\n        font-size: 16px;\n        cursor: pointer;\n        background-color: #007bff;\n        color: white;\n        border: none;\n        border-radius: 4px;\n    }\n\n    button:disabled {\n        background-color: #ccc;\n        cursor: not-allowed;\n    }\n\n    .error-message {\n        margin-top: 20px;\n        padding: 10px;\n        background-color: #ffebee;\n        color: #c62828;\n        border-radius: 4px;\n        text-align: center;\n    }\n</style>\n","import { ref } from 'vue'\n// eslint-disable-next-line no-unused-vars\nimport { videoPlayer } from '@/composables/deviceChecker'\n\n// 将WebSocket相关功能内联到videoProcessor.js中\n/**\n * 初始化WebSocket连接\n * @param {string} type - 连接类型 ('audio' 或 'video')\n * @param {Function} callback - 连接建立后的回调函数\n * @returns {WebSocket} WebSocket实例\n */\nconst initializeWebSocket = (type, callback) => {\n    try {\n        const wsUrl = '/websocket' // 使用 vue.config.js 中配置的代理地址\n        const socket = new WebSocket(wsUrl)\n\n        socket.onopen = () => {\n            console.log(`${type} WebSocket 连接已建立`)\n            // 发送初始类型消息（0表示音频，1表示视频）\n            const typeMessage = new Uint8Array([type === 'audio' ? 0 : 1])\n            socket.send(typeMessage)\n            if (callback) callback(socket)\n        }\n\n        socket.onerror = (error) => {\n            console.error(`${type} WebSocket 错误:`, error)\n        }\n\n        socket.onclose = (event) => {\n            console.log(`${type} WebSocket 连接已关闭`, event)\n        }\n\n        return socket\n    } catch (error) {\n        console.error(`创建${type} WebSocket失败:`, error)\n        return null\n    }\n}\n\nexport const useVideoProcessor = () => {\n    const mediaRecorder = ref(null)\n    const socketRef = ref(null)\n    const videoPlayerRef = ref(null)\n    const videoErrorMessage = ref('')\n    const startVideoBtn = ref(null)\n    const stopVideoBtn = ref(null)\n\n    // 视频开始方法\n    const startVideoRecording = () => {\n        try {\n            socketRef.value = initializeWebSocket('video', async (ws) => {\n                const supported = await checkVideoSupport()\n                if (supported) {\n                    const stream = await getStream()\n                    if (stream) {\n                        ws.send(new Uint8Array([1]))\n                    }\n                } else {\n                    ws.send(new Uint8Array([1]))\n                }\n            })\n        } catch (error) {\n            console.error('启动录像失败:', error)\n            videoErrorMessage.value = '无法启动录像设备，请检查浏览器权限设置'\n        }\n    }\n\n    const stopVideoRecording = () => {\n        if (socketRef.value) socketRef.value.close()\n        if (mediaRecorder.value) mediaRecorder.value.stop()\n        if (startVideoBtn.value) startVideoBtn.value.disabled = false\n        if (stopVideoBtn.value) stopVideoBtn.value.disabled = true\n    }\n\n    const getStream = async () => {\n        try {\n            if (\n                !navigator.mediaDevices ||\n                !navigator.mediaDevices.getUserMedia\n            ) {\n                throw new Error('当前浏览器不支持 getUserMedia')\n            }\n\n            const stream = await navigator.mediaDevices.getUserMedia({\n                video: true,\n            })\n            mediaRecorder.value = new MediaRecorder(stream)\n\n            mediaRecorder.value.ondataavailable = (event) => {\n                if (event.data && event.data.size > 0) {\n                    // 处理数据\n                }\n            }\n\n            return stream\n        } catch (error) {\n            console.error('获取视频流失败:', error)\n            videoErrorMessage.value = '无法访问摄像头，请检查设备权限设置'\n            return null\n        }\n    }\n\n    const checkVideoSupport = async () => {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                video: true,\n            })\n            stream.getTracks().forEach((track) => track.stop())\n            return true\n        } catch (error) {\n            return false\n        }\n    }\n\n    const stopVideoPlayback = () => {\n        if (videoPlayer.value && videoPlayer.value.srcObject) {\n            const tracks = videoPlayer.value.srcObject.getTracks()\n            tracks.forEach((track) => track.stop())\n            videoPlayer.value.srcObject = null\n        }\n    }\n\n    return {\n        mediaRecorder,\n        socketRef,\n        videoPlayerRef,\n        videoErrorMessage,\n        startVideoBtn,\n        stopVideoBtn,\n        startVideoRecording,\n        stopVideoRecording,\n        getStream,\n        checkVideoSupport,\n        stopVideoPlayback,\n    }\n}\n","import { render } from \"./VideoRecorder.vue?vue&type=template&id=6dee99e6\"\nimport script from \"./VideoRecorder.vue?vue&type=script&lang=js\"\nexport * from \"./VideoRecorder.vue?vue&type=script&lang=js\"\n\nimport \"./VideoRecorder.vue?vue&type=style&index=0&id=6dee99e6&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["checkAudioSupport","async","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","stop","error","videoPlayer","ref","id","class","autoplay","muted","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$setup","startVideoRecording","disabled","stopVideoRecording","errorMessage","_hoisted_5","_toDisplayString","_createCommentVNode","initializeWebSocket","type","callback","wsUrl","socket","WebSocket","onopen","console","log","typeMessage","Uint8Array","send","onerror","onclose","event","useVideoProcessor","mediaRecorder","socketRef","videoPlayerRef","videoErrorMessage","startVideoBtn","stopVideoBtn","value","supported","checkVideoSupport","getStream","ws","close","Error","video","MediaRecorder","ondataavailable","data","size","stopVideoPlayback","srcObject","tracks","name","setup","__exports__","render"],"sourceRoot":""}